{"version":3,"sources":["components/renderdata.js","App.js","reportWebVitals.js","index.js"],"names":["Renderdata","state","data","showPopup","name","date","fuente","edad","closepopup","setState","tooglepopup","e","target","feature","properties","PopupInfo","Name","onEachFeature","layer","on","click","Showalert","swal","fire","title","html","confirmButtonText","this","GeoJSON","attribution","features","React","Component","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","Map","position","className","href","alt","MapContainer","center","zoom","dragging","Browser","mobile","tap","TileLayer","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"w1bASqBA,E,4MACjBC,MAAQ,CACJC,KAAMA,EACNC,WAAW,EACXC,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,KAAM,M,EAKVC,WAAa,WACT,EAAKC,SAAS,CACVN,WAAY,EAAKF,MAAME,a,EAI/BO,YAAc,SAACC,GACX,EAAKF,SAAS,CACVN,WAAY,EAAKF,MAAME,UACvBC,KAAMO,EAAEC,OAAOC,QAAQC,WAAWC,UAClCV,KAAMM,EAAEC,OAAOC,QAAQC,WAAWE,Q,EAK1CC,cAAgB,SAACJ,EAASK,GAGtBA,EAAMC,GAAG,CACLC,MAAO,EAAKV,e,EAIpBW,UAAY,WACR,IAAQjB,EAAS,EAAKH,MAAdG,KACAC,EAAS,EAAKJ,MAAdI,KACRiB,IAAKC,KACD,CACIC,MAAOpB,EACPqB,KAAO,4BAA8BpB,EAA9B,iPAMPqB,kBAAmB,Y,4CAU/B,WACI,OAEI,gCAEQC,KAAK1B,MAAME,UAAYwB,KAAKN,YACtB,KAEV,cAACO,EAAA,EAAD,CAASC,YAAY,wBACjB3B,KAAMA,EAAK4B,SACXb,cAAeU,KAAKV,uB,GAnEAc,IAAMC,W,gCCI1CC,EAAcC,IAAEC,KAAK,CACvBC,QAASD,IACTE,UAAWC,MAIbJ,IAAEK,OAAOC,UAAUC,QAAQN,KAAOF,EAO3B,IAAMS,EAAb,4MAGEC,SAAW,CAAC,GAAI,IAHlB,4CAKE,WACE,OAAQ,gCACN,sBAAKC,UAAU,UAAf,UACE,oFAEA,oBAAGA,UAAU,OAAb,wbAKA,uBACE,uBANF,sNAQoG,mBAAGC,KAAK,2CACxGjC,OAAO,QAAQkC,IAAI,YAD6E,yBARpG,qIAWA,uBACE,uBAZF,6EAcA,uBACE,uBAfF,2FAiBqF,mBAAGD,KAAK,8CAA8CjC,OAAO,QAC9IkC,IAAI,4BAD6E,6BAWvF,eAACC,EAAA,EAAD,CAAcC,OAAQrB,KAAKgB,SAAUM,KAAM,EAAGC,UAAWhB,IAAEiB,QAAQC,OAAQC,KAAMnB,IAAEiB,QAAQC,OAA3F,UACE,cAACE,EAAA,EAAD,CACEzB,YAAY,yEACZ0B,IAAI,wDAEN,cAAC,EAAD,cA3CR,GAAyBxB,IAAMC,WCdhBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAQ1BZ,M","file":"static/js/main.3a23c952.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from '../data/data.json';\r\nimport { GeoJSON } from 'react-leaflet';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport swal from 'sweetalert2'\r\n\r\n\r\n\r\n\r\nexport default class Renderdata extends React.Component {\r\n    state = {\r\n        data: data,\r\n        showPopup: false,\r\n        name: '',\r\n        date: '',\r\n        fuente: '',\r\n        edad: null\r\n\r\n\r\n    }\r\n\r\n    closepopup = () => {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        })\r\n    }\r\n\r\n    tooglepopup = (e) => {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup,\r\n            name: e.target.feature.properties.PopupInfo,\r\n            date: e.target.feature.properties.Name\r\n\r\n        });\r\n    }\r\n\r\n    onEachFeature = (feature, layer) => {\r\n\r\n\r\n        layer.on({\r\n            click: this.tooglepopup\r\n        })\r\n    }\r\n\r\n    Showalert = () => {\r\n        const { name } = this.state\r\n        const { date } = this.state\r\n        swal.fire(\r\n            {\r\n                title: name,\r\n                html: (\"<strong> Fecha: </strong>\" + date + \"<br> <br>\" +\r\n                    \"<strong> Fuente primaria: </strong> En verificación... <br> <br>\" +\r\n                    \"<strong> Fuente secundaria: </strong>  <a href='https://twitter.com/vidasilenciadas?lang=en' target='blank' alt='twitter vidas silenciadas'>Vidas silenciadas </a>\"\r\n\r\n                ),\r\n\r\n                confirmButtonText: 'Cerrar'\r\n\r\n\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    this.state.showPopup ? this.Showalert()\r\n                        : null\r\n                }\r\n                <GeoJSON attribution=\"Vidas silenciadas.org\"\r\n                    data={data.features}\r\n                    onEachFeature={this.onEachFeature}\r\n                >\r\n\r\n                </GeoJSON>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet'\nimport Renderdata from './components/renderdata';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\n\n\n\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\n\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n\n//Import components\n\n\n\nexport class Map extends React.Component {\n\n\n  position = [4, -74]\n\n  render() {\n    return (<div>\n      <div className='leftdiv'>\n        <h1>Víctimas relacionadas con el ESMAD en Colombia </h1>\n\n        <p className='text'> Bienvenido/a!\n        En este proyecto, se despliegan los 45 casos documentados por Vidas Silenciadas de personas asesinadas en las que el Escuadrón\n        Movil Antidisturbios (ESMAD) ha tenido participación (presunta o confirmada). Todos los datos\n        presentados en este geovisor se extraen de la base de datos de Vidas Silenciadas.org, todos los datos\n        fueron levantados por ese equipo de trabajo y en este proyecto solo se visibilizan.\n        <br />\n          <br />\n        Desafortunadamente, estos datos se descargaron en 2019, cuando aún se tenia acceso a la base de datos\n        mencionada, razón por la cual los hechos de los años 2020 y 2021, faltando incluso casos como el de <a href='https://es.wikipedia.org/wiki/Dilan_Cruz'\n            target='blank' alt='wikipedia'>Dilan Cruz </a>, no obstante, todos los datos se encuentran en actualización con el fin de añadir las fuentes relacionadas\n        a cada registro.\n        <br />\n          <br />\n        Para conocer el detalle de cada caso, selecciona cada marcador en el mapa.\n        <br />\n          <br />\n\n        Si deseas conocer más del proyecto de vidas silenciadas, puedes revisar su cuenta de <a href='https://twitter.com/vidasilenciadas?lang=en' target='blank'\n            alt='twitter vidas silenciadas'> twitter.</a>\n\n        </p>\n\n\n      </div>\n      {/* Con las opciones de Dragging y de tap se intenta que no se pueda mover la página de leaflet en movil.\n       Otra opción sería desplegar un botón o algo >.<\n       */}\n\n      <MapContainer center={this.position} zoom={6} dragging={!L.Browser.mobile} tap={!L.Browser.mobile}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n        />\n        <Renderdata />\n\n      </MapContainer>\n\n    </div>\n\n\n    )\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Map } from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n\n  <Map />\n  ,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}